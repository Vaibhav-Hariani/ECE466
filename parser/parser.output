Terminals unused in grammar

    DIVEQ
    TIMESEQ
    MODE
    SHLEQ
    SHREQ
    ANDEQ
    OREQ
    XOREQ
    '%'


Grammar

    0 $accept: expr $end

    1 expr: IDENT
    2     | ast_binop
    3     | ast_ternop
    4     | ast_unop
    5     | NUM
    6     | '(' expr ')'
    7     | expr ',' expr
    8     | '*' expr
    9     | expr '[' expr ']'
   10     | '+' expr
   11     | expr '=' expr
   12     | expr PLUSEQ expr
   13     | expr MINUSEQ expr

   14 ast_binop: expr '+' expr
   15          | expr '-' expr
   16          | expr '*' expr
   17          | expr '/' expr

   18 ast_ternop: expr '?' expr ':' expr

   19 ast_unop: expr "++"
   20         | expr "--"
   21         | "++" expr
   22         | "--" expr


Terminals, with rules where they appear

    $end (0) 0
    '%' (37)
    '(' (40) 6
    ')' (41) 6
    '*' (42) 8 16
    '+' (43) 10 14
    ',' (44) 7
    '-' (45) 15
    '/' (47) 17
    ':' (58) 18
    '=' (61) 11
    '?' (63) 18
    '[' (91) 9
    ']' (93) 9
    error (256)
    IDENT (258) 1
    NUM (259) 5
    "++" (260) 19 21
    "--" (261) 20 22
    PLUSEQ (262) 12
    MINUSEQ (263) 13
    DIVEQ (264)
    TIMESEQ (265)
    MODE (266)
    SHLEQ (267)
    SHREQ (268)
    ANDEQ (269)
    OREQ (270)
    XOREQ (271)
    SIZEOF (272)
    PREFIX (273)
    POSTFIX (274)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    expr (34)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13
        on right: 0 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    ast_binop (35)
        on left: 14 15 16 17
        on right: 2
    ast_ternop (36)
        on left: 18
        on right: 3
    ast_unop (37)
        on left: 19 20 21 22
        on right: 4


State 0

    0 $accept: • expr $end

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 8
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 1

    1 expr: IDENT •

    $default  reduce using rule 1 (expr)


State 2

    5 expr: NUM •

    $default  reduce using rule 5 (expr)


State 3

   21 ast_unop: "++" • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 12
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 4

   22 ast_unop: "--" • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 13
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 5

   10 expr: '+' • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 14
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 6

    8 expr: '*' • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 15
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 7

    6 expr: '(' • expr ')'

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 16
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 8

    0 $accept: expr • $end
    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    $end     shift, and go to state 17
    "++"     shift, and go to state 18
    "--"     shift, and go to state 19
    ','      shift, and go to state 20
    '='      shift, and go to state 21
    PLUSEQ   shift, and go to state 22
    MINUSEQ  shift, and go to state 23
    '?'      shift, and go to state 24
    '+'      shift, and go to state 25
    '-'      shift, and go to state 26
    '*'      shift, and go to state 27
    '/'      shift, and go to state 28
    '['      shift, and go to state 29


State 9

    2 expr: ast_binop •

    $default  reduce using rule 2 (expr)


State 10

    3 expr: ast_ternop •

    $default  reduce using rule 3 (expr)


State 11

    4 expr: ast_unop •

    $default  reduce using rule 4 (expr)


State 12

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"
   21         | "++" expr •

    "++"  shift, and go to state 18
    "--"  shift, and go to state 19
    '['   shift, and go to state 29

    $default  reduce using rule 21 (ast_unop)


State 13

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"
   22         | "--" expr •

    "++"  shift, and go to state 18
    "--"  shift, and go to state 19
    '['   shift, and go to state 29

    $default  reduce using rule 22 (ast_unop)


State 14

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   10     | '+' expr •
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"  shift, and go to state 18
    "--"  shift, and go to state 19
    '['   shift, and go to state 29

    $default  reduce using rule 10 (expr)


State 15

    7 expr: expr • ',' expr
    8     | '*' expr •
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"  shift, and go to state 18
    "--"  shift, and go to state 19
    '['   shift, and go to state 29

    $default  reduce using rule 8 (expr)


State 16

    6 expr: '(' expr • ')'
    7     | expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"     shift, and go to state 18
    "--"     shift, and go to state 19
    ','      shift, and go to state 20
    '='      shift, and go to state 21
    PLUSEQ   shift, and go to state 22
    MINUSEQ  shift, and go to state 23
    '?'      shift, and go to state 24
    '+'      shift, and go to state 25
    '-'      shift, and go to state 26
    '*'      shift, and go to state 27
    '/'      shift, and go to state 28
    ')'      shift, and go to state 30
    '['      shift, and go to state 29


State 17

    0 $accept: expr $end •

    $default  accept


State 18

   19 ast_unop: expr "++" •

    $default  reduce using rule 19 (ast_unop)


State 19

   20 ast_unop: expr "--" •

    $default  reduce using rule 20 (ast_unop)


State 20

    7 expr: expr ',' • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 31
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 21

   11 expr: expr '=' • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 32
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 22

   12 expr: expr PLUSEQ • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 33
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 23

   13 expr: expr MINUSEQ • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 34
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 24

   18 ast_ternop: expr '?' • expr ':' expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 35
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 25

   14 ast_binop: expr '+' • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 36
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 26

   15 ast_binop: expr '-' • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 37
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 27

   16 ast_binop: expr '*' • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 38
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 28

   17 ast_binop: expr '/' • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 39
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 29

    9 expr: expr '[' • expr ']'

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 40
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 30

    6 expr: '(' expr ')' •

    $default  reduce using rule 6 (expr)


State 31

    7 expr: expr • ',' expr
    7     | expr ',' expr •
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"     shift, and go to state 18
    "--"     shift, and go to state 19
    '='      shift, and go to state 21
    PLUSEQ   shift, and go to state 22
    MINUSEQ  shift, and go to state 23
    '?'      shift, and go to state 24
    '+'      shift, and go to state 25
    '-'      shift, and go to state 26
    '*'      shift, and go to state 27
    '/'      shift, and go to state 28
    '['      shift, and go to state 29

    $default  reduce using rule 7 (expr)


State 32

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   11     | expr '=' expr •
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"     shift, and go to state 18
    "--"     shift, and go to state 19
    '='      shift, and go to state 21
    PLUSEQ   shift, and go to state 22
    MINUSEQ  shift, and go to state 23
    '?'      shift, and go to state 24
    '+'      shift, and go to state 25
    '-'      shift, and go to state 26
    '*'      shift, and go to state 27
    '/'      shift, and go to state 28
    '['      shift, and go to state 29

    $default  reduce using rule 11 (expr)


State 33

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   12     | expr PLUSEQ expr •
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"     shift, and go to state 18
    "--"     shift, and go to state 19
    '='      shift, and go to state 21
    PLUSEQ   shift, and go to state 22
    MINUSEQ  shift, and go to state 23
    '?'      shift, and go to state 24
    '+'      shift, and go to state 25
    '-'      shift, and go to state 26
    '*'      shift, and go to state 27
    '/'      shift, and go to state 28
    '['      shift, and go to state 29

    $default  reduce using rule 12 (expr)


State 34

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   13     | expr MINUSEQ expr •
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"     shift, and go to state 18
    "--"     shift, and go to state 19
    '='      shift, and go to state 21
    PLUSEQ   shift, and go to state 22
    MINUSEQ  shift, and go to state 23
    '?'      shift, and go to state 24
    '+'      shift, and go to state 25
    '-'      shift, and go to state 26
    '*'      shift, and go to state 27
    '/'      shift, and go to state 28
    '['      shift, and go to state 29

    $default  reduce using rule 13 (expr)


State 35

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   18           | expr '?' expr • ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"     shift, and go to state 18
    "--"     shift, and go to state 19
    ','      shift, and go to state 20
    '='      shift, and go to state 21
    PLUSEQ   shift, and go to state 22
    MINUSEQ  shift, and go to state 23
    '?'      shift, and go to state 24
    ':'      shift, and go to state 41
    '+'      shift, and go to state 25
    '-'      shift, and go to state 26
    '*'      shift, and go to state 27
    '/'      shift, and go to state 28
    '['      shift, and go to state 29


State 36

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   14          | expr '+' expr •
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"  shift, and go to state 18
    "--"  shift, and go to state 19
    '*'   shift, and go to state 27
    '/'   shift, and go to state 28
    '['   shift, and go to state 29

    $default  reduce using rule 14 (ast_binop)


State 37

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   15          | expr '-' expr •
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"  shift, and go to state 18
    "--"  shift, and go to state 19
    '*'   shift, and go to state 27
    '/'   shift, and go to state 28
    '['   shift, and go to state 29

    $default  reduce using rule 15 (ast_binop)


State 38

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   16          | expr '*' expr •
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"  shift, and go to state 18
    "--"  shift, and go to state 19
    '['   shift, and go to state 29

    $default  reduce using rule 16 (ast_binop)


State 39

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   17          | expr '/' expr •
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"  shift, and go to state 18
    "--"  shift, and go to state 19
    '['   shift, and go to state 29

    $default  reduce using rule 17 (ast_binop)


State 40

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
    9     | expr '[' expr • ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"     shift, and go to state 18
    "--"     shift, and go to state 19
    ','      shift, and go to state 20
    '='      shift, and go to state 21
    PLUSEQ   shift, and go to state 22
    MINUSEQ  shift, and go to state 23
    '?'      shift, and go to state 24
    '+'      shift, and go to state 25
    '-'      shift, and go to state 26
    '*'      shift, and go to state 27
    '/'      shift, and go to state 28
    '['      shift, and go to state 29
    ']'      shift, and go to state 42


State 41

   18 ast_ternop: expr '?' expr ':' • expr

    IDENT  shift, and go to state 1
    NUM    shift, and go to state 2
    "++"   shift, and go to state 3
    "--"   shift, and go to state 4
    '+'    shift, and go to state 5
    '*'    shift, and go to state 6
    '('    shift, and go to state 7

    expr        go to state 43
    ast_binop   go to state 9
    ast_ternop  go to state 10
    ast_unop    go to state 11


State 42

    9 expr: expr '[' expr ']' •

    $default  reduce using rule 9 (expr)


State 43

    7 expr: expr • ',' expr
    9     | expr • '[' expr ']'
   11     | expr • '=' expr
   12     | expr • PLUSEQ expr
   13     | expr • MINUSEQ expr
   14 ast_binop: expr • '+' expr
   15          | expr • '-' expr
   16          | expr • '*' expr
   17          | expr • '/' expr
   18 ast_ternop: expr • '?' expr ':' expr
   18           | expr '?' expr ':' expr •
   19 ast_unop: expr • "++"
   20         | expr • "--"

    "++"  shift, and go to state 18
    "--"  shift, and go to state 19
    '?'   shift, and go to state 24
    '+'   shift, and go to state 25
    '-'   shift, and go to state 26
    '*'   shift, and go to state 27
    '/'   shift, and go to state 28
    '['   shift, and go to state 29

    $default  reduce using rule 18 (ast_ternop)
