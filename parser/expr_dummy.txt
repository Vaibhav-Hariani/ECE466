|	 expr ';' expr 	 { $$=new_ast_node(AST_binop, $1, $3, ';');}
|	 expr '+' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '+');}
|	 expr '-' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '-');}
|	 expr '*' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '*');}
|	 expr '/' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '/');}
|	 expr '%' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '%');}
|	 expr '>' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '>');}
|	 expr '<' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '<');}
|	 expr '=' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '=');}
|	 expr '.' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '.');}
|	 expr ',' expr 	 { $$=new_ast_node(AST_binop, $1, $3, ',');}
|	 expr ':' expr 	 { $$=new_ast_node(AST_binop, $1, $3, ':');}
|	 expr '?' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '?');}
|	 expr '&' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '&');}
|	 expr '|' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '|');}
|	 expr '!' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '!');}
|	 expr '^' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '^');}
|	 expr '~' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '~');}
|	 expr '(' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '(');}
|	 expr ')' expr 	 { $$=new_ast_node(AST_binop, $1, $3, ')');}
|	 expr '[' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '[');}
|	 expr ']' expr 	 { $$=new_ast_node(AST_binop, $1, $3, ']');}
|	 expr '{' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '{');}
|	 expr '}' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '}');}
|	 expr '[' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '[');}
|	 expr ']' expr 	 { $$=new_ast_node(AST_binop, $1, $3, ']');}
|	 expr '{' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '{');}
|	 expr '}' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '}');}
|	 expr '#' expr 	 { $$=new_ast_node(AST_binop, $1, $3, '#');}
|	 expr POUNDPOUND expr 	 { $$=new_ast_node(AST_binop, $1, $3, POUNDPOUND);}
|	 expr INDSEL expr 	 { $$=new_ast_node(AST_binop, $1, $3, INDSEL);}
|	 expr PLUSPLUS expr 	 { $$=new_ast_node(AST_binop, $1, $3, PLUSPLUS);}
|	 expr MINUSMINUS expr 	 { $$=new_ast_node(AST_binop, $1, $3, MINUSMINUS);}
|	 expr SHL expr 	 { $$=new_ast_node(AST_binop, $1, $3, SHL);}
|	 expr SHR expr 	 { $$=new_ast_node(AST_binop, $1, $3, SHR);}
|	 expr LTEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, LTEQ);}
|	 expr GTEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, GTEQ);}
|	 expr EQEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, EQEQ);}
|	 expr NOTEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, NOTEQ);}
|	 expr LOGAND expr 	 { $$=new_ast_node(AST_binop, $1, $3, LOGAND);}
|	 expr LOGOR expr 	 { $$=new_ast_node(AST_binop, $1, $3, LOGOR);}
|	 expr ELLIPSIS expr 	 { $$=new_ast_node(AST_binop, $1, $3, ELLIPSIS);}
|	 expr TIMESEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, TIMESEQ);}
|	 expr DIVEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, DIVEQ);}
|	 expr MODEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, MODEQ);}
|	 expr PLUSEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, PLUSEQ);}
|	 expr MINUSEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, MINUSEQ);}
|	 expr SHLEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, SHLEQ);}
|	 expr SHREQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, SHREQ);}
|	 expr ANDEQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, ANDEQ);}
|	 expr OREQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, OREQ);}
|	 expr XOREQ expr 	 { $$=new_ast_node(AST_binop, $1, $3, XOREQ);}
|	 expr POUNDPOUND expr 	 { $$=new_ast_node(AST_binop, $1, $3, POUNDPOUND);}

 

